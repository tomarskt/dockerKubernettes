kubectl get pods -o wide
- pod network
- service to access pod externally
- services - 3 types
- - clusterip - used for internal usage
- - nodeport - for external usage - one external port which will allow access externally
- - load balancer - cloud system - access through ALB, ELB - uses cloud external IP for ELB/ALB
- - service has in built load balancing capabality
- - end point of service is the port to the pod
- - possible to curl the pod ip from host machine but not from outside
- - nodeport range 30000-32767
kubectl get service
kubectl create -f nodeportservice.yaml
- - accessible outside now - http://15.206.165.57(host ip address):31111/test.html
kubectl describe svc my-service
- - any hostip from network will allow access to the pod through service
kubectl delete svc my-service
kubectl delete -f nodeportservice.yaml
ingress holds limited public ip address which allows internal services to be exposed through ports/clusterip
Ingress Controllers
- - nginx ingress controller
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.35.0/deploy/static/provider/baremetal/deploy.yaml
kubectl get svc --all-namespaces
kubectl run nginx --image=nginx
kubectl expose pod nginx --type=ClusterIP --port=80
kubectl get ingress
kubectl apply -f ingress.yaml
creating scheduled pods - specify the node name
http://www.devopsworld.co.in/p/kubernetes-pods-overview.html
http://www.devopsworld.co.in/p/assigning-pods-to-nodes.html
kubectl delete multiple services
kubectl delete pods --all
if nodename does not exists - then pod will be in pending state
node labels
node affinity - operators - in, not in, exists - https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
taint and toleration
